#Queries for login page test data
deleteEnduserQuery=DELETE FROM enduser WHERE username ='%username%'
getEndUserIDQuery=SELECT enduser_id FROM enduser WHERE username = '%userName%'
deleteEnduserECLCommandAuditQuery = delete from ecl_command_audit where enduser_id = %endUserID%
deleteEnduserCapabilityExceptionQuery = delete from enduser_capability_exceptions where enduser_id  = %endUserID%
deleteEnduserAuditDeltaQuery=DELETE FROM audit_delta WHERE audit_id IN(SELECT audit_id from audit WHERE actor_enduser_id = %endUserID%)
deleteEnduserAuditQuery=DELETE FROM AUDIT WHERE actor_enduser_id = %endUserID%
deleteEnduserXTenantQuery=DELETE FROM enduser_x_tenant WHERE enduser_id = %endUserID%
DeleteWelcomeEmailQuery=DELETE FROM welcome_email WHERE enduser_id = %endUserID%
usersUpdatePasswordQuery=UPDATE gpup.enduser SET password='%password%', reset_password_link_active='false', reset_password='false' WHERE username='%username%' AND email='%email%'

#Queries for Audit page test data
getEndpointFirmwareId=SELECT firmware_id FROM firmware WHERE name='%endpointFirmwareName%'
getPremisesId=SELECT premises_id FROM premises WHERE name='%premisesName%'
getTenantId=SELECT tenant_id FROM tenant WHERE name='%tenantName%'
getEndpointId=SELECT endpoint_id FROM endpoint WHERE serial='%endpointName%'
deleteEndpointQuery=DELETE FROM endpoint WHERE endpoint_id ='%endpoint_id%'

#Queries for Site page test data
getDeviceId=SELECT device_id FROM device WHERE endpoint_id=%endPointId%
deleteChannelXVirtualChannelQuery1=DELETE FROM channel_x_virtual_channel_query where channel_id in (select channel_id FROM channel WHERE device_id=%deviceId%)
deleteChannelXVirtualChannelQuery=DELETE FROM channel_x_virtual_channel_query where virtual_channel_query_id in (select virtual_channel_query_id FROM virtual_channel_query WHERE channel_id IN (SELECT channel_id FROM channel WHERE device_id=%deviceId%))
deleteVirtualChannelQuery=DELETE FROM virtual_channel_query WHERE channel_id IN (SELECT channel_id FROM channel WHERE device_id=%deviceId%)
deleteChannel=DELETE FROM channel WHERE device_id=%deviceId%
deleteDeviceMetaData=DELETE FROM device_metadata WHERE device_id in (select device_id from device WHERE endpoint_id=%endPointId%)
deleteDevice=DELETE FROM device WHERE endpoint_id=%endPointId%=
deleteSiteEndpointECLCommand=DELETE FROM ecl_command WHERE endpoint_id=%endPointId%=
deleteEndPointMetadata=DELETE from endpoint_transition_metadata WHERE endpoint_id IN (SELECT endpoint_id FROM endpoint WHERE premises_id=%premisesID%)=
deleteEndPoint=DELETE from endpoint WHERE premises_id=%premisesID%
deletePremisesPath=DELETE from premises_path WHERE premises_id=%premisesID%=
deletePremisesUserLabelXPremises=DELETE FROM enduser_label_x_premises where premises_id=%premisesID%=
deletePremisesTag=DELETE FROM tag WHERE premises_id=%premisesID%
deleteSiteECLCommand=DELETE FROM ecl_command WHERE premises_id=%premisesID%=
deletePremises=DELETE from premises WHERE premises_id=%premisesID%

#Queries for PVAuditAccordian site tab
insertPVAuditQuery=INSERT INTO gpup.pv_audit (pv_audit_id,reporting_period_start,reporting_period_end,report_send,return_status,xml_sent,xml_received,site_name,mail_status ) VALUES(%pv_audit_id%,'2013-05-01 00:00:00','2013-05-31 23:59:59','2013-06-02 03:00:01.978','t','<env:Envelope xmlns:env="http://www.w3.org/2003/05/soap-envelope"><env:Header><ns2:cAuthentication xmlns:ns2="http://ar.masstech-pts.org/">***********</ns2:UserName>***********</ns2:Password></ns2:cAuthentication></env:Header><env:Body><ns2:postdata xmlns:ns2="http://ar.masstech-pts.org/"><ns2:xmldata><?xml version="1.0" encoding="UTF-8" standalone="yes"?><ARData xmlns="http://ar.masstech-pts.org/PTS-AR"><ptsSystem sysType="PV"><sysID>NFG-NN1981-09821</sysID><MonthlyData><PVmonthlyData><kwhRegistry>160177.1749999977764673531055450439453125</kwhRegistry><regDateTime>2013-07-31T23:59:59</regDateTime></PVmonthlyData></MonthlyData></ptsSystem></ARData></ns2:xmldata></ns2:postdata></env:Body></env:Envelope>','<?xml version="1.0" encoding="utf-8"?><soap:Envelope xmlns:soap="http://www.w3.org/2003/05/soap-envelope" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><soap:Body><postdataResponse xmlns="http://ar.masstech-pts.org/"><postdataResult><ARResults xmlns="http://ar.masstech-pts.org/ARResults.xsd"><Results><Messages /><NumberOfSystems>1</NumberOfSystems><ARSystemResults SystemID="NFG-NN1981-09821"><Success>true</Success><RecordsInserted>0</RecordsInserted><Messages /></ARSystemResults></Results></ARResults></postdataResult></postdataResponse></soap:Body></soap:Envelope>','sitePage_siteBot1','t')
deletePVAuditQuery=DELETE FROM gpup.pv_audit WHERE site_name='%site_name%' 

#Queries for Virtual Channel test data
deleteUserRolePermissionsVCQuery0=DELETE from channel_x_virtual_channel_query where virtual_channel_query_id in (select virtual_channel_query_id FROM virtual_channel_query WHERE channel_id in (SELECT channel_id FROM channel WHERE channel_name='URP_testSiteBot1VC2'))
deleteUserRolePermissionsVCQuery1=DELETE from channel_x_virtual_channel_query where channel_id in (select channel_id FROM channel WHERE channel_name='%channel_name%')
deleteUserRolePermissionsVCQuery2=DELETE FROM virtual_channel_query WHERE channel_id in (SELECT channel_id FROM channel WHERE channel_name='%channel_name%')
deleteUserRolePermissionsVCQuery3=DELETE FROM channel WHERE channel_name='%channel_name%'

#Queries for bulk import sites deletion
deleteBulkImportSitesChannelDataQuery=Delete from channel where device_id IN (Select device_id from device where endpoint_id IN (Select endpoint_id from endpoint where premises_id In (select premises_id from premises where name LIKE '%premise_Name%')))
deleteBulkImportSitesDevicelDataQuery=Delete from device where endpoint_id IN (Select endpoint_id from endpoint where premises_id In (select premises_id from premises where name LIKE '%premise_Name%'))
deleteBulkImportSitesEndpointDataQuery=Delete from endpoint where premises_id In (select premises_id from premises where name LIKE '%premise_Name%')
deleteBulkImportSitesQuery=Delete from premises where name LIKE '%premise_Name%'
deleteBulkImportSitesPremisesPathQuery=Delete from premises_path where premises_id  IN (Select premises_id from premises where name LIKE '%premise_Name%');







#Insert queries for DataFix Test Data 
insertTenantQuery=INSERT INTO gpup.tenant (tenant_id, name, parent_id,tenant_type_id,active)  VALUES (-444444,'aUITestTenant', 5 , 4, TRUE)
#Update this insert query on 09March17 because column "has_ev" is removed with ticket GPUP-29172
insertPremisesQuery=INSERT INTO gpup.premises (tenant_id, premises_id, premises_uuid, description, reference_id, name, address1, address2, city, province, country, latitude, longitude, timezone, zipcode, sqfootage, system_size, has_pv) VALUES (-444444, -444444, uuid_generate_v4(), 'testsite', '-444444', 'aUITestSite', '2801 Clarendon Blvd','Suite 100','Arlington','VA','US',38.88859,-77.091952, 'US/Eastern', '22201', 100, 100.00, true)
insertPremisesPathQuery=INSERT INTO gpup.premises_path (premises_id, path) VALUES (-444444, '/aUITestTenant/botAuto/testPath')

insertEndpointQuery=INSERT INTO gpup.endpoint (endpoint_id, endpoint_uuid, reference_id, password, premises_id, endpoint_type_id) VALUES (-444444, uuid_generate_v4(), '-444444', 'password', -444444, 9)
insertDeviceQuery=INSERT INTO gpup.device (device_id, endpoint_id, device_type_id, name, address) values (-400001, -444444, 19, 'Cooler-434401', '-400001'), (-400002, -444444, 19, 'Freezer-434402', '-400002'), (-400003, -444444, 50, 'WaterMeter-434403', '-400003'), (-400004, -444444, 1, 'Generic-434404', '-400004'), (-400005, -444444, 49, 'GasMeter-434405', '-400005'), (-400006, -444444, 18, 'LCP-434406', '-400006'), (-400007, -444444, 18, 'LCP-434407', '-400007'), (-400008, -444444, 18, 'LCP-434408', '-400008'), (-400009, -444444, 18, 'LCP-434409', '-400009'), (-400010, -444444, 12, 'HVAC-434410', '-400010'), (-400011, -444444, 12, 'HVAC-434411', '-400011'), (-400012, -444444, 12, 'HVAC-434412', '-400012'), (-400013, -444444, 12, 'HVAC-434413', '-400013'), (-400014, -444444, 12, 'HVAC-434414', '-400014'), (-400015, -444444, 12, 'HVAC-434415', '-400015'), (-400016, -444444, 12, 'HVAC-434416', '-400016'), (-400017, -444444, 12, 'HVAC-434417', '-400017'), (-400018, -444444, 12, 'HVAC-434418', '-400018'), (-400019, -444444, 12, 'HVAC-434419', '-400019'), (-400020, -444444, 12, 'HVAC-434420', '-400020'), (-400021, -444444, 12, 'HVAC-434421', '-400021'), (-400022, -444444, 52, 'MainLoad-434422', '-400022'), (-400023, -444444, 52, 'MainLoad-434423', '-400023'), (-400024, -444444, 54, 'system-434424', '-400024'), (-400025, -444444, 54, 'system-434425', '-400025') 
channelQuery1=INSERT INTO gpup.channel (channel_id, channel_uuid, channel_name, display_name, reference_id, device_id, channel_metadata_id, granularity, channel_total_type_id) VALUES(-400201, uuid_generate_v4(), 'Cooler-400201', 'ch-400201', 1401, -400001, 77, 5, -1), (-400202, uuid_generate_v4(), 'Freezer-400202', 'ch-400202', 1401, -400002, 77, 5, -1), (-400203, uuid_generate_v4(), 'WaterMeter-400203', 'ch-400203', 2001, -400003, 92, 5, 0), (-400204, uuid_generate_v4(), 'Generic-400204', 'ch-400204', 2210, -400004, 59, 5, 0), (-400205, uuid_generate_v4(), 'GasMeter-400205', 'ch-400205', 2051, -400005, 1, 5, 0), (-400206, uuid_generate_v4(), 'kW-400206', 'ch-4000206', 1204, -400006, 43, 5, 0), (-400207, uuid_generate_v4(), 'Power Factor-400207', 'ch-400207', 1207, -400007, 45, 5, -1), (-400208, uuid_generate_v4(), 'Manual Override Runtime-400208', 'ch-400208', 1214, -400008, 262, 5, 0), (-400209, uuid_generate_v4(), 'Sensor Override Runtime-400209', 'ch-400209', 1215, -400009, 263, 5, 0), (-400210, uuid_generate_v4(), 'K_W-400210', 'ch-400210', 119, -400010, 23, 5, 0), (-400211, uuid_generate_v4(), 'Outdoor Temperature-400211', 'ch-400211', 129, -400011, 20, 5, -1), (-400212, uuid_generate_v4(), 'Power Factor-400212', 'ch-400212', 122, -400012, 26, 5, -1), (-400213, uuid_generate_v4(), 'Scheduled Cool Setpoint-400213', 'ch-400213', 138, -400013, 253, 5, 3), (-400214, uuid_generate_v4(), 'Curtailment Runtime-400214', 'ch-400214', 144, -400014, 253, 6, 0), (-400215, uuid_generate_v4(), 'Setback Runtime-400215', 'ch-400215', 146, -400015, 257, 7, 0), (-400216, uuid_generate_v4(), 'ZoneTemperature-400216', 'ch-400216', 101, -400016, 40, 9, -1), (-400217, uuid_generate_v4(), 'HeatSetpoint-400217', 'ch-400217', 102, -400017, 109, 10, -1), (-400218, uuid_generate_v4(), 'CoolSetpoint-400218', 'ch-400218', 103, -400018, 108, 11, -1), (-400219, uuid_generate_v4(), 'HeatCycle Count-400219', 'ch-400219', 165, -400019, 353, 12, 0), (-400220, uuid_generate_v4(), 'CoolCycle Count-400240', 'ch-400220', 166, -400020, 354, 6, 0), (-400221, uuid_generate_v4(), 'DuctTemperature-400221', 'ch-400221', 116, -400021, 17, 7, -1), (-400222, uuid_generate_v4(), 'Main Load Voltage (C-A)-400222', 'ch-400222', 1339, -400022, 136, 9, -1), (-400223, uuid_generate_v4(), 'Main Load kW 3Phase-400223', 'ch-400223', 1328, -400023, 128, 5, 1), (-400224, uuid_generate_v4(), 'Free_Disk_Space-400224', 'ch-400224', 1704, -400024, 140, 6, -1),(-400225, uuid_generate_v4(), 'Process_VM_Size-400225', 'ch-400225', 1707, -400025, 143, 7, -1)

updateCalcType=UPDATE channel_metadata SET calc_type='average' WHERE channel_metadata_id=(SELECT channel_metadata_id FROM channel WHERE channel_id = -400209)
updateGranularity1=UPDATE channel SET granularity=5 WHERE channel_id=-400218
updateGranularity2=UPDATE channel SET granularity=6 WHERE channel_id=-400216 
updateGranularity3=UPDATE channel SET granularity=9 WHERE channel_id=-400217    
insertDatafixUserQuery=INSERT INTO gpup.enduser (enduser_id, role_id, username, password, email, enabled, not_locked_out, num_failed_logins, language, first_name, last_name, reset_password, reset_password_link_active ) VALUES ( '%user_id%', '%user_role_id%', '%username%', '%password%', 'kpeddi@gridpoint.com', true, true, 0, 'en_US', 'DatafixTesting', 'DatafixUser', 'false', 'false' )
enduser_x_tenantQuery1=INSERT INTO enduser_x_tenant(enduser_id,tenant_id,paths,creation_date,modification_date)values (-50020,-444444,'*','2017-03-04 18:12:18','2017-03-04 18:12:18')  

#Delete queries for DataFix Test Data
getRowsCount=SELECT COUNT(*) FROM interval_data WHERE channel_id=%channelId%
deleteQuery1=DELETE FROM gpup.channel_x_virtual_channel_query WHERE channel_id IN (SELECT channel_id FROM channel WHERE device_id IN (SELECT device_id FROM device WHERE endpoint_id IN (SELECT endpoint_id FROM endpoint WHERE premises_id IN (SELECT premises_id FROM premises WHERE tenant_id = -444444))))
deleteQuery2=DELETE FROM gpup.virtual_channel_query WHERE channel_id IN (SELECT channel_id FROM gpup.channel WHERE reference_id LIKE '-%' AND channel_name LIKE 'ch-%')
deleteQuery3=DELETE FROM ecl_command where endpoint_id in (select endpoint_id FROM gpup.endpoint WHERE premises_id IN ( SELECT premises_id FROM premises WHERE tenant_id = -444444))
deleteQuery4=DELETE FROM endpoint_config where endpoint_id in (select endpoint_id FROM gpup.endpoint WHERE premises_id IN ( SELECT premises_id FROM premises WHERE tenant_id = -444444))
deleteQuery5=DELETE FROM gpup.channel WHERE device_id IN ( SELECT device_id FROM device WHERE endpoint_id IN ( SELECT endpoint_id FROM endpoint WHERE premises_id IN ( SELECT premises_id FROM premises WHERE tenant_id = -444444) ) )
deleteQuery6=DELETE FROM gpup.device_metadata WHERE device_id IN (SELECT device_id FROM device WHERE endpoint_id IN ( SELECT endpoint_id FROM endpoint WHERE premises_id IN ( SELECT premises_id FROM premises WHERE tenant_id = -444444) ) )
deleteQuery7=DELETE FROM gpup.device WHERE endpoint_id IN ( SELECT endpoint_id FROM endpoint WHERE premises_id IN ( SELECT premises_id FROM premises WHERE tenant_id = -444444 ) )
deleteQuery8=DELETE FROM gpup.endpoint_host_connection WHERE endpoint_id IN ( SELECT endpoint_id FROM endpoint WHERE premises_id IN ( SELECT premises_id FROM premises WHERE tenant_id = -444444 ) )
deleteQuery9=DELETE FROM gpup.endpoint_transition_metadata WHERE endpoint_id IN ( SELECT endpoint_id FROM endpoint WHERE premises_id IN ( SELECT premises_id FROM premises WHERE tenant_id = -444444 ) )
#deleteQuery9=DELETE from endpoint_config where endpoint_id IN ( SELECT premises_id FROM premises WHERE tenant_id = -444444)
deleteQuery10=DELETE FROM gpup.endpoint WHERE premises_id IN ( SELECT premises_id FROM premises WHERE tenant_id = -444444)
deleteQuery11=DELETE FROM gpup.premises_path WHERE premises_id IN ( SELECT premises_id FROM premises WHERE tenant_id = -444444 )
deleteQuery12=DELETE FROM gpup.premises WHERE premises_id IN ( SELECT premises_id FROM premises WHERE tenant_id = -444444 )
deleteQuery13=DELETE FROM gpup.enduser_x_tenant WHERE tenant_id = -444444
deleteQuery14=DELETE FROM gpup.tenant WHERE tenant_id =-444444
deleteDatafixUserQuery=DELETE FROM gpup.enduser WHERE username = '%username%' 

#Delete queries for EC1KReplacement Test Data
ec1kgetRowsCount=SELECT COUNT(*) FROM interval_data WHERE channel_id=%channelId%
ec1kdeleteQuery2=DELETE FROM gpup.channel_x_virtual_channel_query WHERE channel_id IN (SELECT channel_id FROM channel WHERE device_id IN (SELECT device_id FROM device WHERE endpoint_id IN (SELECT endpoint_id FROM endpoint WHERE premises_id IN (SELECT premises_id FROM premises WHERE tenant_id = -444445))))
ec1kdeleteQuery3=DELETE FROM gpup.virtual_channel_query WHERE channel_id IN (SELECT channel_id FROM gpup.channel WHERE reference_id LIKE '-%' AND channel_name LIKE 'ch-%')
ec1kdeleteQuery4=DELETE FROM gpup.channel WHERE device_id IN ( SELECT device_id FROM device WHERE endpoint_id IN ( SELECT endpoint_id FROM endpoint WHERE premises_id IN ( SELECT premises_id FROM premises WHERE tenant_id = -444445) ) )
ec1kdeleteQuery5=DELETE FROM gpup.device_metadata WHERE device_id IN (SELECT device_id FROM device WHERE endpoint_id IN ( SELECT endpoint_id FROM endpoint WHERE premises_id IN ( SELECT premises_id FROM premises WHERE tenant_id = -444445) ) )
ec1kdeleteQuery6=DELETE FROM gpup.device WHERE endpoint_id IN ( SELECT endpoint_id FROM endpoint WHERE premises_id IN ( SELECT premises_id FROM premises WHERE tenant_id = -444445 ) )
ec1kdeleteQuery7=DELETE FROM gpup.endpoint_host_connection WHERE endpoint_id IN ( SELECT endpoint_id FROM endpoint WHERE premises_id IN ( SELECT premises_id FROM premises WHERE tenant_id = -444445 ) )
ec1kdeleteQuery8=DELETE FROM gpup.endpoint_transition_metadata WHERE endpoint_id IN ( SELECT endpoint_id FROM endpoint WHERE premises_id IN ( SELECT premises_id FROM premises WHERE tenant_id = -444445 ) )
#ec1kdeleteQuery9=DELETE from endpoint_config where endpoint_id IN ( SELECT premises_id FROM premises WHERE tenant_id = -444445)
ec1kdeleteQuery10=DELETE FROM gpup.endpoint WHERE premises_id IN ( SELECT premises_id FROM premises WHERE tenant_id = -444445)
ec1kdeleteQuery11=DELETE FROM gpup.premises_path WHERE premises_id IN ( SELECT premises_id FROM premises WHERE tenant_id = -444445 )
ec1kdeleteQuery12=DELETE FROM gpup.premises WHERE premises_id IN ( SELECT premises_id FROM premises WHERE tenant_id = -444445 )
ec1kdeleteQuery13=DELETE FROM gpup.enduser_x_tenant WHERE tenant_id = -444445
ec1kdeleteQuery14=DELETE FROM gpup.tenant WHERE tenant_id =-444445
ec1kdeleteDatafixUserQuery=DELETE FROM gpup.enduser WHERE username = '%username%' 

#Insert queries for EC1KReplacement Test Data
ec1kinsertTenantQuery=INSERT INTO gpup.tenant (tenant_id, name, parent_id,tenant_type_id,active)  VALUES (-444445,'aEC1KTestTenant', 5 , 4, TRUE)
ec1kinsertPremisesQuery=INSERT INTO gpup.premises (tenant_id, premises_id, premises_uuid, description, reference_id, name, address1, address2, city, province, country, latitude, longitude, timezone, zipcode, sqfootage, system_size, has_pv) VALUES (-444445, -444445, uuid_generate_v4(), 'testsite', '-444445', 'aEC1KTestSite', '2801 Clarendon Blvd','Suite 100','Arlington','VA','US',38.88859,-77.091952, 'US/Eastern', '22201', 100, 100.00, true)
ec1kinsertPremisesPathQuery=INSERT INTO gpup.premises_path (premises_id, path) VALUES (-444445, '/aEC1KTestTenant/botAuto/testPath')
ec1kinsertEndpointQuery=INSERT INTO gpup.endpoint (endpoint_id, endpoint_uuid, reference_id, password, premises_id, endpoint_type_id, firmware_version) VALUES (-444445, uuid_generate_v4(), '-444445', 'password', -444445, 9, 'GPEC-1.6.0'),(-444446, uuid_generate_v4(), '-444446', 'password', -444445, 9, 'GPEC-1.6.0'),(-444447, uuid_generate_v4(), '-444447', 'password', -444445, 8),(-444448, uuid_generate_v4(), '-444448', 'password', -444445, 8, 'GPEC-1.6.0'),(-444449, uuid_generate_v4(), '-444449', 'password', -444445, 15. 'GPEC-1.6.0'),(-444450, uuid_generate_v4(), '-444450', 'password', -444445, 15, 'GPEC-1.6.0')
ec1kinsertDeviceQuery=INSERT INTO gpup.device (device_id, endpoint_id, device_type_id, name, address) values (-400101, -444445, 19, 'Cooler-400101', '-400101'), (-400102, -444445, 19, 'Freezer-400102', '-400102'), (-400103, -444446, 50, 'WaterMeter-400103', '-400103'), (-400104, -444446, 1, 'Generic-400104', '-400104'), (-400105, -444447, 49, 'GasMeter-400105', '-400105'), (-400106, -444447, 18, 'LCP-400106', '-400106'), (-400107, -444448, 18, 'LCP-400107', '-400107'), (-400108, -444448, 18, 'LCP-400108', '-400108'), (-400109, -444449, 18, 'LCP-400109', '-400109'), (-400110, -444449, 12, 'HVAC-400110', '-400110'), (-400111, -444450, 12, 'HVAC-400111', '-400111'), (-400112, -444450, 12, 'HVAC-400112', '-400112') 
ec1kchannelQuery1=INSERT INTO gpup.channel (channel_id, channel_uuid, channel_name, display_name, reference_id, device_id, channel_metadata_id, granularity, channel_total_type_id) VALUES(-400101, uuid_generate_v4(), 'Cooler-400101', 'ch-400101', 1401, -400101, 77, 5, -1), (-400102, uuid_generate_v4(), 'Freezer-400102', 'ch-400102', 1401, -400101, 77, 5, -1), (-400103, uuid_generate_v4(), 'WaterMeter-400103', 'ch-400103', 2001, -400101, 92, 5, 0), (-400104, uuid_generate_v4(), 'Generic-400104', 'ch-400104', 2210, -400101, 59, 5, 0), (-400105, uuid_generate_v4(), 'GasMeter-400105', 'ch-400105', 2051, -400101, 1, 5, 0), (-400106, uuid_generate_v4(), 'kW-400106', 'ch-4000106', 1204, -400102, 43, 5, 0), (-400107, uuid_generate_v4(), 'Power Factor-400107', 'ch-400107', 1207, -400102, 45, 5, -1), (-400108, uuid_generate_v4(), 'Manual Override Runtime-400108', 'ch-400108', 1214, -400102, 262, 5, 0), (-400109, uuid_generate_v4(), 'Sensor Override Runtime-400109', 'ch-400109', 1215, -400102, 263, 5, 0), (-400110, uuid_generate_v4(), 'K_W-400110', 'ch-400110', 119, -400102, 23, 5, 0)

#Delete queries for endpoint Test Data
#deleteEndpointUserQuery=DELETE FROM gpup.enduser WHERE username = '%username%' 
#deleteEndpointDataQuery1=DELETE FROM gpup.channel_x_virtual_channel_query WHERE channel_id IN ( SELECT channel_id FROM channel WHERE device_id IN ( SELECT device_id FROM device WHERE endpoint_id IN ( SELECT endpoint_id FROM endpoint WHERE premises_id IN ( SELECT premises_id FROM premises WHERE tenant_id IN ( SELECT tenant_id FROM tenant WHERE name = '%endpointPage_TenantName%' ) ) ) ) )
#deleteEndpointDataQuery2=DELETE FROM gpup.channel_x_virtual_channel_query WHERE channel_id IN ( SELECT channel_id FROM channel WHERE device_id IN ( SELECT device_id FROM device WHERE endpoint_id IN ( SELECT endpoint_id FROM endpoint WHERE serial = '%endpoint_name%')))
#deleteEndpointDataQuery3=DELETE FROM gpup.virtual_channel_query WHERE channel_id IN ( SELECT channel_id FROM channel WHERE device_id IN ( SELECT device_id FROM device WHERE endpoint_id IN ( SELECT endpoint_id FROM endpoint WHERE premises_id IN ( SELECT premises_id FROM premises WHERE tenant_id IN ( SELECT tenant_id FROM tenant WHERE name = '%endpointPage_TenantName%' ) ) ) ) )
#deleteEndpointDataQuery4=DELETE FROM gpup.virtual_channel_query WHERE channel_id IN ( SELECT channel_id FROM channel WHERE device_id IN ( SELECT device_id FROM device WHERE endpoint_id IN ( SELECT endpoint_id FROM endpoint WHERE serial = '%endpoint_name%')))
#deleteEndpointDataQuery5=DELETE FROM gpup.channel WHERE device_id IN ( SELECT device_id FROM device WHERE endpoint_id IN ( SELECT endpoint_id FROM endpoint WHERE premises_id IN ( SELECT premises_id FROM premises WHERE tenant_id IN ( SELECT tenant_id FROM tenant WHERE name = '%endpointPage_TenantName%' ) ) ) )
#deleteEndpointDataQuery6=DELETE FROM gpup.channel WHERE device_id IN ( SELECT device_id FROM device WHERE endpoint_id IN ( SELECT endpoint_id FROM endpoint WHERE serial = '%endpoint_name%'))
#deleteEndpointDataQuery7=DELETE FROM gpup.device_metadata WHERE device_id IN (SELECT device_id FROM gpup.device WHERE endpoint_id IN ( SELECT endpoint_id FROM endpoint WHERE premises_id IN ( SELECT premises_id FROM premises WHERE tenant_id IN ( SELECT tenant_id FROM tenant WHERE name = '%endpointPage_TenantName%' ) ) ) )
#deleteEndpointDataQuery8=DELETE FROM gpup.device WHERE endpoint_id IN ( SELECT endpoint_id FROM endpoint WHERE premises_id IN ( SELECT premises_id FROM premises WHERE tenant_id IN ( SELECT tenant_id FROM tenant WHERE name = '%endpointPage_TenantName%' ) ) )
#deleteEndpointDataQuery9=DELETE FROM gpup.device_metadata WHERE device_id IN (SELECT device_id FROM gpup.device WHERE endpoint_id IN ( SELECT endpoint_id FROM endpoint WHERE serial = '%endpoint_name%'))
#deleteEndpointDataQuery10=DELETE FROM gpup.device WHERE endpoint_id IN ( SELECT endpoint_id FROM endpoint WHERE serial = '%endpoint_name%')
#deleteEndpointDataQuery11=DELETE FROM gpup.ecl_command WHERE endpoint_id IN (SELECT endpoint_id FROM endpoint WHERE premises_id IN ( SELECT premises_id FROM premises WHERE tenant_id IN ( SELECT tenant_id FROM tenant WHERE name = '%endpointPage_TenantName%' ) ) )
deleteEndpointecl_commandQuery12=DELETE FROM gpup.ecl_command WHERE endpoint_id = %endpoint_id%
#deleteEndpointDataQuery13=DELETE FROM gpup.endpoint_host_connection WHERE endpoint_id IN ( SELECT endpoint_id FROM endpoint WHERE premises_id IN ( SELECT premises_id FROM premises WHERE tenant_id IN ( SELECT tenant_id FROM tenant WHERE name = '%endpointPage_TenantName%' ) ) )
#deleteEndpointDataQuery14=DELETE FROM gpup.endpoint_host_connection WHERE endpoint_id IN (SELECT endpoint_id FROM endpoint WHERE serial = '%endpoint_name%')
#deleteEndpointDataQuery15=DELETE FROM gpup.endpoint_transition_metadata WHERE endpoint_id IN ( SELECT endpoint_id FROM endpoint WHERE premises_id IN ( SELECT premises_id FROM premises WHERE tenant_id IN ( SELECT tenant_id FROM tenant WHERE name = '%endpointPage_TenantName%' ) ) )
#deleteEndpointDataQuery16=DELETE FROM gpup.endpoint WHERE premises_id IN ( SELECT premises_id FROM premises WHERE tenant_id IN ( SELECT tenant_id FROM tenant WHERE name = '%endpointPage_TenantName%' ) )
deleteEndpointDataQuery17=DELETE FROM gpup.endpoint WHERE endpoint_id= %endpoint_id%                        
#deleteEndpointDataQuery18=DELETE FROM gpup.premises_path WHERE premises_id IN ( SELECT premises_id FROM premises WHERE tenant_id IN ( SELECT tenant_id FROM tenant WHERE name = '%endpointPage_TenantName%' ) )
#deleteEndpointDataQuery19=DELETE FROM gpup.premises WHERE premises_id IN ( SELECT premises_id FROM premises WHERE tenant_id IN ( SELECT tenant_id FROM tenant WHERE name = '%endpointPage_TenantName%' ) )
#deleteEndpointDataQuery20=DELETE FROM gpup.enduser_x_tenant WHERE tenant_id IN ( SELECT tenant_id FROM tenant WHERE name = '%endpointPage_TenantName%' )
#deleteEndpointDataQuery21=DELETE FROM gpup.tenant WHERE tenant_id IN ( SELECT tenant_id FROM tenant WHERE name = '%endpointPage_TenantName%' )

#Queries for user page test data
insertUserQuery=INSERT INTO gpup.enduser (enduser_id, role_id, username, password, email, enabled, not_locked_out, num_failed_logins, language, first_name, last_name, reset_password, reset_password_link_active ) VALUES (-50001, '2', '%username%', '%password%', 'kpeddi@gridpoint.com', true, true, 0, 'en_US', 'Testing', 'User', false, false )
updateUserPassword=UPDATE gpup.enduser SET password='%password%' WHERE username='%username%'
updateTempUserPassword=UPDATE gpup.enduser SET password='63c16c4f85e74c85986481c0584d56d9a361ac6551c0f5d91110959a8bb8629d' WHERE username='%username%'
deleteTestUser=delete from gpup.audit_delta where audit_id in(select audit_id from gpup.audit where target_entity_name like '%username%');delete from gpup.audit where target_entity_name like '%username%';delete from gpup.welcome_email where enduser_id in (select enduser_id from gpup.enduser where username like '%username%');delete from gpup.enduser_x_tenant where enduser_id=(select enduser_id from gpup.enduser where username like '%username%');delete from gpup.enduser_capability_exceptions where enduser_id=(select enduser_id from gpup.enduser where username like '%username%');delete from gpup.enduser where username like '%username%';


#Queries for endpoint firmware page test data
deleteEndpointFirmwareDataQuery1 = DELETE FROM gpup.channel WHERE device_id IN (SELECT device_id FROM device WHERE endpoint_id IN ( SELECT endpoint_id FROM endpoint WHERE (staged_firmware_id IN ( SELECT firmware_id FROM firmware WHERE name = '%endpointFirmwareName%' ) )) )
deleteEndpointFirmwareDataQuery2 = DELETE FROM gpup.device WHERE endpoint_id IN ( SELECT endpoint_id FROM endpoint WHERE (staged_firmware_id IN ( SELECT firmware_id FROM firmware WHERE name = '%endpointFirmwareName%' ) ))
deleteEndpointFirmwareDataQuery3 = DELETE FROM gpup.endpoint WHERE staged_firmware_id = (SELECT firmware_id FROM gpup.firmware WHERE name = '%endpointFirmwareName%')
deleteEndpointFirmwareDataQuery4 = DELETE FROM endpoint_host_connection WHERE endpoint_id IN ( SELECT endpoint_id FROM endpoint WHERE (staged_firmware_id IN ( SELECT firmware_id FROM firmware WHERE name = '%endpointFirmwareName%' ) ))
deleteEndpointFirmwareDataQuery5 = DELETE FROM firmware WHERE firmware_id = (SELECT firmware_id FROM gpup.firmware WHERE name = '%endpointFirmwareName%') 

#Queries for peripheral firmware page test data
deletePeripheralFirmwareDataQuery1 =DELETE from gpec_peripheral_firmware where version_major_number=-3 and version_minor_number=-3 and minimum_controller_firmware_version_major_number=-3 and minimum_controller_firmware_version_minor_number=-3 and minimum_controller_firmware_version_revision_number=-3



#Delete quaries for various type of Accordion of endpoint Page 
deleteEndpointPageHistoryAccordion=DELETE FROM gpup.endpoint_log_message WHERE endpoint_id=%endpoint_id%
deleteEndpointPageDevicesAccordion=DELETE FROM gpup.device WHERE endpoint_id=%endpoint_id%
deleteEndpointPageAuditAccordion=DELETE FROM firmware WHERE name='%endpointFirmwareName%'

#INSERT quaries for various type of Accordion of Endpoint Page
insertEndpointPageHistoryAccordion=INSERT INTO endpoint_log_message (endpoint_log_message_id, sequence, log_level, file_name, message, endpoint_id, timestamp) VALUES (-401001, 0, 'DEBUG', 'TestingName1', 'TestingMsg1', %endpoint_id%, '2016-08-24'), (-401002, 1, 'DEBUG', 'TestingName2', 'TestingMsg2', %endpoint_id% ,'2016-08-24'), (-401003, 2, 'DEBUG', 'TestingName3', 'TestingMsg3', %endpoint_id% ,'2016-08-24'), (-401004, 3, 'DEBUG', 'TestingName4', 'TestingMsg4', %endpoint_id% ,'2016-08-24'), (-401005, 4, 'DEBUG', 'TestingName5', 'TestingMsg5', %endpoint_id% ,'2016-08-24'), (-401006, 5, 'DEBUG', 'TestingName6', 'TestingMsg6', %endpoint_id% ,'2016-08-24'), (-401007, 6, 'DEBUG', 'TestingName7', 'TestingMsg7', %endpoint_id% ,'2016-08-24'), (-401008, 7, 'DEBUG', 'TestingName8', 'TestingMsg8', %endpoint_id% ,'2016-08-24'), (-401009, 8, 'DEBUG', 'TestingName9', 'TestingMsg9', %endpoint_id% ,'2016-08-24'), (-401010, 9, 'DEBUG', 'TestingName10', 'TestingMsg10', %endpoint_id% ,'2016-08-24'), (-401011, 10, 'DEBUG', 'TestingName11', 'TestingMsg11', %endpoint_id% ,'2016-08-24'), (-401012, 11, 'DEBUG', 'TestingName12', 'TestingMsg12', %endpoint_id% ,'2016-08-24'), (-401013, 12, 'DEBUG', 'TestingName13', 'TestingMsg13', %endpoint_id% ,'2016-08-24'), (-401014, 13, 'DEBUG', 'TestingName14', 'TestingMsg14', %endpoint_id% ,'2016-08-24'), (-401015, 14, 'DEBUG', 'TestingName15', 'TestingMsg15', %endpoint_id% ,'2016-08-24'), (-401016, 15, 'DEBUG', 'TestingName16', 'TestingMsg16', %endpoint_id% ,'2016-08-24'), (-401017, 16, 'DEBUG', 'TestingName17', 'TestingMsg17', %endpoint_id% ,'2016-08-24'), (-401018, 17, 'DEBUG', 'TestingName18', 'TestingMsg18', %endpoint_id% ,'2016-08-24'), (-401019, 18, 'DEBUG', 'TestingName19', 'TestingMsg19', %endpoint_id% ,'2016-08-24'), (-401020, 19, 'DEBUG', 'TestingName20', 'TestingMsg20', %endpoint_id% ,'2016-08-24'), (-401021, 20, 'DEBUG', 'TestingName21', 'TestingMsg21', %endpoint_id% ,'2016-08-24'), (-401022, 21, 'DEBUG', 'TestingName22', 'TestingMs22', %endpoint_id% ,'2016-08-24'), (-401023, 22, 'DEBUG', 'TestingName23', 'TestingMsg23', %endpoint_id% ,'2016-08-24')
insertEndpointPageDevicesAccordion=INSERT INTO gpup.device (device_id, endpoint_id, device_type_id, name, address) VALUES (-410001, %endpoint_id%, 2, 'TestDevice', 'TestAddress1'), (-410002, %endpoint_id%, 2, 'TestDevice', 'TestAddress2'), (-410003, %endpoint_id%, 2, 'TestDevice', 'TestAddress3'), (-410004, %endpoint_id%, 2, 'TestDevice', 'TestAddress4'), (-410005, %endpoint_id%, 2, 'TestDevice', 'TestAddress5'), (-410006, %endpoint_id%, 2, 'TestDevice', 'TestAddress6'), (-410007, %endpoint_id%, 2, 'TestDevice', 'TestAddress7'), (-410008, %endpoint_id%, 2, 'TestDevice', 'TestAddress8'), (-410009, %endpoint_id%, 2, 'TestDevice', 'TestAddress9'), (-410010, %endpoint_id%, 2, 'TestDevice', 'TestAddress10'), (-410011, %endpoint_id%, 2, 'TestDevice', 'TestAddress11'), (-410012, %endpoint_id%, 2, 'TestDevice', 'TestAddress12'), (-410013, %endpoint_id%, 2, 'TestDevice', 'TestAddress13'), (-410014, %endpoint_id%, 2, 'TestDevice', 'TestAddress14'), (-410015, %endpoint_id%, 2, 'TestDevice', 'TestAddress15'), (-410016, %endpoint_id%, 2, 'TestDevice', 'TestAddress16'), (-410017, %endpoint_id%, 2, 'TestDevice', 'TestAddress17'), (-410018, %endpoint_id%, 2, 'TestDevice', 'TestAddress18'), (-410019, %endpoint_id%, 2, 'TestDevice', 'TestAddress19'), (-410020, %endpoint_id%, 2, 'TestDevice', 'TestAddress20'), (-410021, %endpoint_id%, 2, 'TestDevice', 'TestAddress21'), (-410022, %endpoint_id%, 2, 'TestDevice', 'TestAddress22'), (-410023, %endpoint_id%, 2, 'TestDevice', 'TestAddress23'),(-410024, %endpoint_id%, 2, 'TestDevice', 'TestAddress24')

#Queries for UserRolePermission Page test Data
insertGPAdminUserRolePermissionsQuery=INSERT INTO gpup.enduser (enduser_id, role_id, username, password, email, enabled, not_locked_out, num_failed_logins, language, first_name, last_name, reset_password, reset_password_link_active, activation_date) VALUES ( -50046, '1', '%username%', '%password%', 'kpeddi@gridpoint.com', true, true, 0, 'en_US', 'UserRoleTesting', 'UserRoleUser', false, false, '%activation_date%' )
insertGPSupportUserRolePermissionsQuery=INSERT INTO gpup.enduser (enduser_id, role_id, username, password, email, enabled, not_locked_out, num_failed_logins, language, first_name, last_name, reset_password, reset_password_link_active, activation_date) VALUES ( -50045, '2', '%username%', '%password%', 'kpeddi@gridpoint.com', true, true, 0, 'en_US', 'UserRoleTesting', 'UserRoleUser', false, false,'%activation_date%' )
insertGPAnalystUserRolePermissionsQuery=INSERT INTO gpup.enduser (enduser_id, role_id, username, password, email, enabled, not_locked_out, num_failed_logins, language, first_name, last_name, reset_password, reset_password_link_active, activation_date) VALUES ( -50047, '6', '%username%', '%password%', 'kpeddi@gridpoint.com', true, true, 0, 'en_US', 'UserRoleTesting', 'UserRoleUser', false, false, '%activation_date%' )
insertCustomerSiteManagerUserRolePermissionsQuery=INSERT INTO gpup.enduser (enduser_id, role_id, username, password, email, enabled, not_locked_out, num_failed_logins, language, first_name, last_name, reset_password, reset_password_link_active, activation_date) VALUES ( -50048, '8', '%username%', '%password%', 'kpeddi@gridpoint.com', true, true, 0, 'en_US', 'UserRoleTesting', 'UserRoleUser', false, false, '%activation_date%' )
insertCustomerAnalystUserRolePermissionsQuery=INSERT INTO gpup.enduser (enduser_id, role_id, username, password, email, enabled, not_locked_out, num_failed_logins, language, first_name, last_name, reset_password, reset_password_link_active, activation_date) VALUES ( -50049, '7', '%username%', '%password%', 'kpeddi@gridpoint.com', true, true, 0, 'en_US', 'UserRoleTesting', 'UserRoleUser', false, false, '%activation_date%' )
insertCommissionerUserRolePermissionsQuery=INSERT INTO gpup.enduser (enduser_id, role_id, username, password, email, enabled, not_locked_out, num_failed_logins, language, first_name, last_name, reset_password, reset_password_link_active, activation_date) VALUES ( -50048, '4', '%username%', '%password%', 'kpeddi@gridpoint.com', true, true, 0, 'en_US', 'UserRoleTesting', 'UserRoleUser', false, false, '%activation_date%' )
updateGPUP26329testUserQuery=UPDATE gpup.enduser SET password='%password%', reset_password_link_active='false', reset_password='false' WHERE username='%username%' AND email='kpeddi@gridpoint.com'

# TODO : Added by sonu on 11 sep 2018.... curretly commenting it to avoid compilation issues....verify
#insertGPAdminUserRolePermissionsQuery1=INSERT INTO gpup.enduser (enduser_id, role_id, username, password, email, enabled, not_locked_out, num_failed_logins, language, first_name, last_name, reset_password, reset_password_link_active, activation_date) VALUES ( -50050, '1', '%username%', '%password%', 'kpeddi@gridpoint.com', true, true, 0, 'en_US', 'UserRoleTesting', 'UserRoleUser', false, false, '%activation_date%' )
#insertPartnerCommissionerUserRolePermissionQuery1=INSERT INTO gpup.enduser (enduser_id, role_id, username, password, email, enabled, not_locked_out, num_failed_logins, language, first_name, last_name, reset_password, reset_password_link_active, activation_date) VALUES ( -50051, '11', '%username%', '%password%', 'kpeddi@gridpoint.com', true, true, 0, 'en_US', 'UserRoleTesting', 'UserRoleUser', false, false, '%activation_date%' )
#insertPartnerCommissionerUserRolePermissionQuery2=INSERT INTO gpup.enduser (enduser_id, role_id, username, password, email, enabled, not_locked_out, num_failed_logins, language, first_name, last_name, reset_password, reset_password_link_active, activation_date) VALUES ( -50052, '11', '%username%', '%password%', 'kpeddi@gridpoint.com', true, true, 0, 'en_US', 'UserRoleTesting', 'UserRoleUser', false, false, '%activation_date%' )
#insertPartnerCommissionerUserRolePermissionQuery3=INSERT INTO gpup.enduser (enduser_id, role_id, username, password, email, enabled, not_locked_out, num_failed_logins, language, first_name, last_name, reset_password, reset_password_link_active, activation_date) VALUES ( -50053, '11', '%username%', '%password%', 'kpeddi@gridpoint.com', true, true, 0, 'en_US', 'UserRoleTesting', 'UserRoleUser', false, false, '%activation_date%' )
#insertPartnerCommissionerUserRolePermissionQuery4=INSERT INTO gpup.enduser (enduser_id, role_id, username, password, email, enabled, not_locked_out, num_failed_logins, language, first_name, last_name, reset_password, reset_password_link_active, activation_date) VALUES ( -50054, '11', '%username%', '%password%', 'kpeddi@gridpoint.com', true, true, 0, 'en_US', 'UserRoleTesting', 'UserRoleUser', false, false, '%activation_date%' )  

#insertUserRoleTenantQuery=INSERT INTO gpup.tenant (tenant_id, name, parent_id,tenant_type_id,active)  VALUES (-50030,'%tenantName%', 791,4,TRUE)
# Update Parent id from 971 to 5
insertUserRoleTenantQuery=INSERT INTO gpup.tenant (tenant_id, name, parent_id,tenant_type_id,active)  VALUES (-50030,'%tenantName%', 5,4,TRUE)
insertUserRolePremisesQuery=INSERT INTO gpup.premises (tenant_id, premises_id, premises_uuid, description, reference_id, name, address1, address2, city, province, country, latitude, longitude, timezone, zipcode, sqfootage, system_size, has_pv) VALUES (-50030, -50030, uuid_generate_v4(), 'userRolePage_siteBot1', '-50030', 'userRolePage_siteBot1', '2801 Clarendon Blvd','Suite 100','Arlington','VA','US',38.88859,-77.091952, 'US/Eastern', '22201', 100, 100.00, true)

getTenantIdForURP=select tenant_id from tenant where name='%tenantName%'
getUsersIdForURP=select enduser_id from enduser where username = '%userName%'
associateUserToTenantAndSite=insert into enduser_x_tenant values('%enduserID%', '%tenantID%', '*', '2011-03-12 03:45:26', '2011-03-12 03:45:26')

#deleteUserRolePermissionsQuery0=DELETE from enduser_x_tenant where enduser_id = (select enduser_id from gpup.enduser WHERE enduser_id ='%enduserID%' and tenant_id='%tenantID%')
deleteUserRolePermissionsQuery0=DELETE from enduser_x_tenant where enduser_id = (select enduser_id from gpup.enduser WHERE enduser_id ='%enduserID%')
deleteUserRolePermissionsQuery1=DELETE from enduser_capability_exceptions WHERE enduser_id ='%enduserID%'
deleteUserRolePermissionsQuery2=DELETE FROM audit_delta WHERE audit_id in(select audit_id from audit where actor_enduser_id in (select enduser_id from enduser WHERE username='%username%'))
deleteUserRolePermissionsQuery3=DELETE FROM audit WHERE actor_enduser_id = (select enduser_id from enduser WHERE username='%username%')
deleteUserRolePermissionsQuery4=DELETE FROM report_content WHERE report_task_id IN (SELECT report_task_id FROM report_task WHERE enduser_id IN(SELECT enduser_id FROM gpup.enduser WHERE username='%username%'))
deleteUserRolePermissionsQuery5=DELETE from welcome_email where enduser_id =(SELECT enduser_id FROM enduser WHERE username='%username%')
deleteUserRolePermissionsQuery6=DELETE FROM report_task where enduser_id IN (SELECT enduser_id FROM enduser WHERE username='%username%')
deleteUserRolePermissionsQuery7=DELETE FROM gpup.enduser WHERE username='%username%'


#Queries for User Page Test Data
deleteUserWelcomeEmail=DELETE from welcome_email where enduser_id =(SELECT enduser_id FROM enduser WHERE username='%username%')
deleteUserCapabilityExceptions=DELETE FROM enduser_capability_exceptions WHERE enduser_id IN (SELECT enduser_id FROM enduser WHERE username='%username%')
deleteUserProperty=DELETE FROM enduser_property WHERE enduser_id IN (SELECT enduser_id FROM enduser WHERE username='%username%')
deleteUserXTenant=DELETE FROM enduser_x_tenant WHERE enduser_id IN (SELECT enduser_id FROM enduser WHERE username='%username%')
deleteUserAuditDelta=DELETE FROM audit_delta WHERE audit_id IN (SELECT audit_id FROM audit WHERE actor_enduser_id IN (SELECT enduser_id FROM enduser WHERE username='%username%'))
deleteUserAudit=DELETE FROM audit WHERE actor_enduser_id IN (SELECT enduser_id FROM enduser WHERE username='%username%')
deleteUserEclCommandAudit=DELETE FROM ecl_command WHERE ecl_command_audit_id IN(SELECT ecl_command_audit_id FROM ecl_command_audit WHERE enduser_id IN (SELECT enduser_id FROM enduser WHERE username='%username%'))
deleteUserEclCommand=DELETE FROM ecl_command_audit WHERE enduser_id IN (SELECT enduser_id FROM enduser WHERE username='%username%')
deleteReportContent=DELETE FROM report_content WHERE report_task_id IN (SELECT report_task_id FROM report_task WHERE enduser_id IN(SELECT enduser_id FROM gpup.enduser WHERE username='%username%'))
deleteUserReportTask=DELETE FROM report_task where enduser_id IN (SELECT enduser_id FROM enduser WHERE username='%username%')
deleteUserLabelXPremises=DELETE FROM enduser_label_x_premises where enduser_label_id in (select enduser_label_id from enduser_label where enduser_id IN (SELECT enduser_id FROM enduser WHERE username='%username%'))
deleteUserLabel=DELETE FROM enduser_label where enduser_id IN (SELECT enduser_id FROM enduser WHERE username='%username%')
deleteUser=DELETE FROM enduser WHERE enduser_id IN (SELECT enduser_id FROM enduser WHERE username='%username%')

#Queries for Tenant Page Test Data
deleteTenantUserQuery=DELETE FROM gpup.enduser WHERE username = '%username%'
deleteTenantUserPermissionQuery=DELETE FROM enduser_x_tenant WHERE enduser_id = '%enduser_id%'
deleteTenantUserAuditQuery=DELETE from audit where actor_enduser_id = '%enduser_id%'
getEnduserId=select enduser_id from enduser where username = '%username%'
insertGPSupporTenantQuery=INSERT INTO gpup.enduser (enduser_id, role_id, username, password, email, enabled, not_locked_out, num_failed_logins, language, first_name, last_name, reset_password, reset_password_link_active, activation_date ) VALUES ( -60052, '2', '%username%', '%password%', 'kpeddi@gridpoint.com', true, true, 0, 'en_US', 'TenantTesting', 'TenantUser', false, false, '%activationDate%' )
insertGPSupporSiteQuery=INSERT INTO gpup.enduser (enduser_id, role_id, username, password, email, enabled, not_locked_out, num_failed_logins, language, first_name, last_name, reset_password, reset_password_link_active, activation_date ) VALUES ( -60051, '2', '%username%', '%password%', 'kpeddi@gridpoint.com', true, true, 0, 'en_US', 'SiteTesting', 'TenantUser', false, false, '%activationDate%' )
insertCustomerAnalystSiteQuery=INSERT INTO gpup.enduser (enduser_id, role_id, username, password, email, enabled, not_locked_out, num_failed_logins, language, first_name, last_name, reset_password, reset_password_link_active, activation_date ) VALUES ( -60053, '7', '%username%', '%password%', 'kpeddi@gridpoint.com', true, true, 0, 'en_US', 'SiteTesting', 'TenantUser', false, false, '%activationDate%' )
insertGPAnalystSiteQuery=INSERT INTO gpup.enduser (enduser_id, role_id, username, password, email, enabled, not_locked_out, num_failed_logins, language, first_name, last_name, reset_password, reset_password_link_active, activation_date ) VALUES ( -60054, '6', '%username%', '%password%', 'kpeddi@gridpoint.com', true, true, 0, 'en_US', 'SiteTesting', 'TenantUser', false, false, '%activationDate%' )

getTenantId=SELECT tenant_id FROM tenant WHERE name='%tenantName%'
getTenantChildrenId=SELECT tenant_id FROM tenant WHERE parent_id IN (SELECT tenant_id FROM tenant WHERE name='%tenantName%')
deleteTenantPremisesEndpointDeviceChannel=DELETE FROM channel WHERE device_id IN (SELECT device_id FROM device WHERE endpoint_id IN (SELECT endpoint_id FROM endpoint WHERE premises_id IN (SELECT premises_id FROM premises WHERE tenant_id=%tenant_id%)))
deleteTenantPremisesEndpointDeviceMetadata=DELETE FROM device_metadata WHERE device_id IN (SELECT device_id FROM device WHERE endpoint_id IN (SELECT endpoint_id FROM endpoint WHERE premises_id IN (SELECT premises_id FROM premises WHERE tenant_id=%tenant_id%)))
deleteTenantPremisesEndpointDevice=DELETE FROM device WHERE endpoint_id IN (SELECT endpoint_id FROM endpoint WHERE premises_id IN (SELECT premises_id FROM premises WHERE tenant_id=%tenant_id%))
deleteTenantEndpointECLCommand=DELETE FROM ecl_command WHERE endpoint_id IN (SELECT endpoint_id FROM endpoint WHERE premises_id IN (SELECT premises_id FROM premises WHERE tenant_id=%tenant_id%))
deleteTenantECLCommand=DELETE FROM ecl_command WHERE premises_id =(SELECT premises_id FROM premises WHERE tenant_id=%tenant_id%)
deleteTenantPremisesEndpointMetadata=DELETE FROM endpoint_transition_metadata WHERE endpoint_id in (SELECT endpoint_id FROM endpoint WHERE premises_id IN (SELECT premises_id FROM premises WHERE tenant_id=%tenant_id%))
deleteTenantPremisesEndpoint=DELETE FROM endpoint WHERE premises_id IN (SELECT premises_id FROM premises WHERE tenant_id=%tenant_id%)
deleteTenantPremisesPath=DELETE FROM premises_path WHERE premises_id IN (SELECT premises_id FROM premises WHERE tenant_id=%tenant_id%)
deleteTenantPremises=DELETE FROM premises WHERE tenant_id=%tenant_id%
deleteTenantEndUserXTenant=DELETE FROM enduser_x_tenant WHERE tenant_id=%tenant_id%
deleteTenantCommissioningConfigTemplates=DELETE FROM commissioning_config_templates WHERE tenant_id=%tenant_id%
deleteTenant=DELETE FROM tenant WHERE tenant_id=%tenant_id%

#Queries for Site Page Test Data


getUniqEndpointId=SELECT endpoint_id from device where endpoint_id in (SELECT endpoint_id from endpoint WHERE premises_id=%premisesID%)and name='%deviceName%'
getDeviceId=SELECT device_id FROM device WHERE endpoint_id=%endPointId%
#deleteChannelXVirtualChannelQuery=DELETE FROM channel_x_virtual_channel_query WHERE channel_id IN (SELECT channel_id FROM channel WHERE device_id=%deviceId%)
deleteChannelXVirtualChannelQuery1=DELETE FROM channel_x_virtual_channel_query where channel_id in (select channel_id FROM channel WHERE device_id=%deviceId%)
deleteChannelXVirtualChannelQuery=DELETE FROM channel_x_virtual_channel_query where virtual_channel_query_id in (select virtual_channel_query_id FROM virtual_channel_query WHERE channel_id IN (SELECT channel_id FROM channel WHERE device_id=%deviceId%))
deleteVirtualChannelQuery=DELETE FROM virtual_channel_query WHERE channel_id IN (SELECT channel_id FROM channel WHERE device_id=%deviceId%)
deleteChannel=DELETE FROM channel WHERE device_id=%deviceId%
deleteDeviceMetaData=DELETE FROM device_metadata WHERE device_id in (select device_id from device WHERE endpoint_id=%endPointId%)
deleteDevice=DELETE FROM device WHERE endpoint_id=%endPointId%
deleteSiteEndpointECLCommand=DELETE FROM ecl_command WHERE endpoint_id=%endPointId%
deleteEndPointMetadata=DELETE from endpoint_transition_metadata WHERE endpoint_id IN (SELECT endpoint_id FROM endpoint WHERE premises_id=%premisesID%)
deleteEndPoint=DELETE from endpoint WHERE premises_id=%premisesID%
deletePremisesPath=DELETE from premises_path WHERE premises_id=%premisesID%
deletePremisesUserLabelXPremises=DELETE FROM enduser_label_x_premises where premises_id=%premisesID%
deletePremisesTag=DELETE FROM tag WHERE premises_id=%premisesID%
deleteSiteECLCommand=DELETE FROM ecl_command WHERE premises_id=%premisesID%
deletePremises=DELETE from premises WHERE premises_id=%premisesID%
selectActiveSite=Select*from premises WHERE premises_id=%premisesID%

#Queries for Endpoint Test Data
insertGPSupportEndpointQuery=INSERT INTO gpup.enduser (enduser_id, role_id, username, password, email, enabled, not_locked_out, num_failed_logins, language, first_name, last_name, reset_password, reset_password_link_active ) VALUES ( -60040, '2', '%username%', '%password%', 'kpeddi@gridpoint.com', true, true, 0, 'en_US', 'EndpointTesting', 'EndpointUser', false, false )

selectEndpointName=select name from tenant where tenant_id in (select tenant_id from premises where premises_id in (select premises_id from endpoint where serial='%endpointName%'))
replaceController=UPDATE gpup.endpoint_host_connection SET last_connect_date='2017-01-04 12:25:00', last_disconnect_date='2017-01-04 12:27:00' WHERE endpoint_id in (select endpoint_id from gpup.endpoint where serial='%endpointSerial%')
liveController=UPDATE gpup.endpoint_host_connection SET last_connect_date='2017-01-04 12:27:00', last_disconnect_date='2017-01-04 12:25:00' WHERE endpoint_id in (select endpoint_id from gpup.endpoint where serial='%endpointSerial%')
connectDate=update gpup.endpoint set connections_enabled=true where endpoint_id in (select endpoint_id from gpup.endpoint where serial='%endpointSerial%')

siteCountInSubTenant=select count(*) from premises where tenant_id=%SubTenantId%
activeSiteCountInSubTenant=select count(*) from premises where tenant_id=%SubTenantId% and active=true
subTenantList2=SELECT tenant_id FROM gpup.tenant where parent_id=%subTenantList1Id%
testQuery=SELECT tenant_id FROM  gpup.tenant where parent_id = (SELECT tenant_id FROM  gpup.tenant where name='%mainTenant%')
testQueryID=select count(*) from premises where tenant_id = (SELECT tenant_id FROM  gpup.tenant where parent_id='%parentId%')
testQuery2=select count(*) from premises where tenant_id = (SELECT tenant_id FROM  gpup.tenant where name='%tenant%')
activeSitestestQuery2=select count(*) from premises where tenant_id = (SELECT tenant_id FROM  gpup.tenant where name='%tenant%') and active=true 

#TestdataFor GPUP-30805
updatePremisesQueryGPUP26329=update premises set tenant_id = %tenantID% where name='%siteName%'
getTotalSites=select count(*) from premises where tenant_id in(select tenant_id from enduser_x_tenant where enduser_id in (select enduser_id from enduser where username='%userName%'))
getTenantIdQueryGPUP30805=select count(*) from endpoint where premises_id in (select premises_id from premises where tenant_id in(select tenant_id from enduser_x_tenant where enduser_id =(select enduser_id from enduser where username='%userName%'))) 
